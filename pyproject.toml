[tool.pytest.ini_options]
addopts = ["-rfEX", "--cov-report=", "--cov-append"]
python_files = ["test_*.py", "*_test.py"]
testpaths = ["tests"]

[tool.pylint.main]
recursive = true
extension-pkg-allow-list = ["pydantic.schema", "arize"]
enable = ["c-extension-no-member"]
disable = [
  "coerce-builtin",
  "no-absolute-import",
  "import-error",
  "no-name-in-module",
  "no-member",
  "C",
  "R",
]
evaluation = "10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"
msg-template = "{msg_id}:{symbol} [{line:0>3d}:{column:0>2d}] {obj}: {msg}"
output-format = "colorized"
score = true

[tool.pylint.classes]
valid-metaclass-classmethod-first-arg = ["cls", "mcls", "kls"]

[tool.pylint.logging]
logging-format-style = "old" # using %s formatter for logging (performance-related)

[tool.pylint.miscellaneous]
notes = ["FIXME", "XXX", "TODO", "NOTE", "WARNING"]

[tool.black]
line-length = 88
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.tox
    | \.venv
    | \.build
    | venv
    | _build
    | build
    | bazel-*
    | lib
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
length_sort = true
force_single_line = true
order_by_type = true
known_first_party = "bentoml"
force_alphabetical_sort_within_sections = true
skip_glob = ["test/*", "venv/*", "lib/*", "bazel-*"]

[tool.pyright]
pythonVersion = "3.10"
exclude = ["tools/gen_python_packages", "bazel-*/", "venv"]
venv = ["venv"]
typeCheckingMode = "strict"
analysis.useLibraryCodeForTypes = true
enableTypeIgnoreComments = true
